// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/hello.proto

#ifndef PROTOBUF_proto_2fhello_2eproto__INCLUDED
#define PROTOBUF_proto_2fhello_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_proto_2fhello_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsHelloInputImpl();
void InitDefaultsHelloInput();
void InitDefaultsHelloOutputImpl();
void InitDefaultsHelloOutput();
inline void InitDefaults() {
  InitDefaultsHelloInput();
  InitDefaultsHelloOutput();
}
}  // namespace protobuf_proto_2fhello_2eproto
namespace hello {
class HelloInput;
class HelloInputDefaultTypeInternal;
extern HelloInputDefaultTypeInternal _HelloInput_default_instance_;
class HelloOutput;
class HelloOutputDefaultTypeInternal;
extern HelloOutputDefaultTypeInternal _HelloOutput_default_instance_;
}  // namespace hello
namespace hello {

// ===================================================================

class HelloInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hello.HelloInput) */ {
 public:
  HelloInput();
  virtual ~HelloInput();

  HelloInput(const HelloInput& from);

  inline HelloInput& operator=(const HelloInput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HelloInput(HelloInput&& from) noexcept
    : HelloInput() {
    *this = ::std::move(from);
  }

  inline HelloInput& operator=(HelloInput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloInput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HelloInput* internal_default_instance() {
    return reinterpret_cast<const HelloInput*>(
               &_HelloInput_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(HelloInput* other);
  friend void swap(HelloInput& a, HelloInput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HelloInput* New() const PROTOBUF_FINAL { return New(NULL); }

  HelloInput* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HelloInput& from);
  void MergeFrom(const HelloInput& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HelloInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 repeat = 2;
  void clear_repeat();
  static const int kRepeatFieldNumber = 2;
  ::google::protobuf::int32 repeat() const;
  void set_repeat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:hello.HelloInput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 repeat_;
  mutable int _cached_size_;
  friend struct ::protobuf_proto_2fhello_2eproto::TableStruct;
  friend void ::protobuf_proto_2fhello_2eproto::InitDefaultsHelloInputImpl();
};
// -------------------------------------------------------------------

class HelloOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hello.HelloOutput) */ {
 public:
  HelloOutput();
  virtual ~HelloOutput();

  HelloOutput(const HelloOutput& from);

  inline HelloOutput& operator=(const HelloOutput& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HelloOutput(HelloOutput&& from) noexcept
    : HelloOutput() {
    *this = ::std::move(from);
  }

  inline HelloOutput& operator=(HelloOutput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloOutput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HelloOutput* internal_default_instance() {
    return reinterpret_cast<const HelloOutput*>(
               &_HelloOutput_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(HelloOutput* other);
  friend void swap(HelloOutput& a, HelloOutput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HelloOutput* New() const PROTOBUF_FINAL { return New(NULL); }

  HelloOutput* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HelloOutput& from);
  void MergeFrom(const HelloOutput& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HelloOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string hello_message = 1;
  void clear_hello_message();
  static const int kHelloMessageFieldNumber = 1;
  const ::std::string& hello_message() const;
  void set_hello_message(const ::std::string& value);
  #if LANG_CXX11
  void set_hello_message(::std::string&& value);
  #endif
  void set_hello_message(const char* value);
  void set_hello_message(const char* value, size_t size);
  ::std::string* mutable_hello_message();
  ::std::string* release_hello_message();
  void set_allocated_hello_message(::std::string* hello_message);

  // @@protoc_insertion_point(class_scope:hello.HelloOutput)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hello_message_;
  mutable int _cached_size_;
  friend struct ::protobuf_proto_2fhello_2eproto::TableStruct;
  friend void ::protobuf_proto_2fhello_2eproto::InitDefaultsHelloOutputImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HelloInput

// string name = 1;
inline void HelloInput::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HelloInput::name() const {
  // @@protoc_insertion_point(field_get:hello.HelloInput.name)
  return name_.GetNoArena();
}
inline void HelloInput::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hello.HelloInput.name)
}
#if LANG_CXX11
inline void HelloInput::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hello.HelloInput.name)
}
#endif
inline void HelloInput::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hello.HelloInput.name)
}
inline void HelloInput::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hello.HelloInput.name)
}
inline ::std::string* HelloInput::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:hello.HelloInput.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HelloInput::release_name() {
  // @@protoc_insertion_point(field_release:hello.HelloInput.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloInput::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:hello.HelloInput.name)
}

// int32 repeat = 2;
inline void HelloInput::clear_repeat() {
  repeat_ = 0;
}
inline ::google::protobuf::int32 HelloInput::repeat() const {
  // @@protoc_insertion_point(field_get:hello.HelloInput.repeat)
  return repeat_;
}
inline void HelloInput::set_repeat(::google::protobuf::int32 value) {
  
  repeat_ = value;
  // @@protoc_insertion_point(field_set:hello.HelloInput.repeat)
}

// -------------------------------------------------------------------

// HelloOutput

// string hello_message = 1;
inline void HelloOutput::clear_hello_message() {
  hello_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HelloOutput::hello_message() const {
  // @@protoc_insertion_point(field_get:hello.HelloOutput.hello_message)
  return hello_message_.GetNoArena();
}
inline void HelloOutput::set_hello_message(const ::std::string& value) {
  
  hello_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hello.HelloOutput.hello_message)
}
#if LANG_CXX11
inline void HelloOutput::set_hello_message(::std::string&& value) {
  
  hello_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hello.HelloOutput.hello_message)
}
#endif
inline void HelloOutput::set_hello_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hello_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hello.HelloOutput.hello_message)
}
inline void HelloOutput::set_hello_message(const char* value, size_t size) {
  
  hello_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hello.HelloOutput.hello_message)
}
inline ::std::string* HelloOutput::mutable_hello_message() {
  
  // @@protoc_insertion_point(field_mutable:hello.HelloOutput.hello_message)
  return hello_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HelloOutput::release_hello_message() {
  // @@protoc_insertion_point(field_release:hello.HelloOutput.hello_message)
  
  return hello_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloOutput::set_allocated_hello_message(::std::string* hello_message) {
  if (hello_message != NULL) {
    
  } else {
    
  }
  hello_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hello_message);
  // @@protoc_insertion_point(field_set_allocated:hello.HelloOutput.hello_message)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace hello

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2fhello_2eproto__INCLUDED
